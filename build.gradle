buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '4.2.4'
group = 'com.blakebr0.mysticalagriculture'
archivesBaseName = 'MysticalAgriculture-1.17.1'

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

repositories {
    maven { url 'https://dvs1.progwml6.com/files/maven/' }
    maven { url 'https://maven.blamejared.com' }
    maven { url 'https://maven.tterrag.com' }
    maven {
        url 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
}

minecraft {
    mappings channel: 'official', version: '1.17.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            ideaModule "${rootProject.name}.${project.name}.main"

            mods {
                mysticalagriculture {
                    source sourceSets.main
                }

                cucumber {
                    source project(':Cucumber').sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            ideaModule "${rootProject.name}.${project.name}.main"

            mods {
                mysticalagriculture {
                    source sourceSets.main
                }

                cucumber {
                    source project(':Cucumber').sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            ideaModule "${rootProject.name}.${project.name}.main"

            args '--mod', 'mysticalagriculture', '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]

            mods {
                mysticalagriculture {
                    source sourceSets.main
                }

                cucumber {
                    source project(':Cucumber').sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs 'src/generated/resources'
            exclude '.cache'
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.17.1-37.0.71'

    implementation project(':Cucumber')
    implementation fg.deobf('curse.maven:jade-324717:3447700')

    runtimeOnly fg.deobf('mezz.jei:jei-1.17.1:8.0.0.14')

    compileOnly 'mezz.jei:jei-1.17.1:8.0.0.14:api'
}

//dependencies {
//    minecraft 'net.minecraftforge:forge:1.16.5-36.1.0'
//
//    compileOnly fg.deobf('com.blamejared.crafttweaker:CraftTweaker-1.16.5:7.1.0.326')
//    compileOnly fg.deobf('vazkii.patchouli:Patchouli:1.16.2-47')
//    compileOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.16:1.16-3.1.3-21") { transitive = false }
//}

task apiJar(type: Jar) {
    // Remove sources from the api jar when MinecraftForge/ForgeGradle#369 is fixed
    from(sourceSets.main.allJava)
    from(sourceSets.main.output)
    include 'com/blakebr0/mysticalagriculture/api/**'

    classifier = 'api'
    archiveName = "${baseName}-${version}-api.${extension}"
}

artifacts {
    archives apiJar
}

jar {
    manifest {
        attributes([
                'Specification-Title': 'Mystical Agriculture',
                'Specification-Vendor': 'BlakeBr0',
                'Specification-Version': '1',
                'Implementation-Title': project.name,
                'Implementation-Version': "${archiveVersion}",
                'Implementation-Vendor' : 'BlakeBr0',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}